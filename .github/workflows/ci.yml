# Continuous‑Integration pipeline – refined version
# -------------------------------------------------
# * Hardened: test & lint failures stop the build.
# * Faster: automatic caching via setup‑node/setup‑python.
# * Clean: duplicated steps removed, concurrency/cancellation added.
# * Portable: everything runs on ubuntu‑latest only, but adding
#   further OSes / Node versions is one line thanks to matrix.
#
# Drop this file in .github/workflows/ci.yml

name: CI

# Cancel older runs on the same branch/PR when a new commit arrives
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, develop, youness-tmp]
  pull_request:
    branches: [main, develop]

jobs:
  # ---------------------- Front‑end ----------------------------------
  frontend:
    name: Front‑end (lint + test + build)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20] # add 18 or 22 here if you support them
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node }} with cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          node-version-file: Client/package.json # auto-detect version if present
          cache-dependency-path: Client/package-lock.json

      - name: Install deps
        working-directory: Client
        run: npm ci --prefer-offline --no-audit

      - name: Type‑check (TS)
        working-directory: Client
        run: npx tsc --noEmit --skipLibCheck

      - name: Unit tests
        working-directory: Client
        run: npm test -- --ci --coverage

      - name: Build (Vite)
        working-directory: Client
        run: npm run build

      - name: Upload built SPA
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: Client/dist
          retention-days: 14
          if-no-files-found: error

  # ---------------------- Accessibility ------------------------------
  accessibility:
    name: Pa11y WCAG audit
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download built SPA
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: dist

      - name: Serve & audit with Pa11y
        uses: pa11y/pa11y-action@v2 # lightweight wrapper around pa11y‑ci
        with:
          # Pa11y options
          urls: http://localhost:8080
          standard: WCAG2AA
          chrome-flags: "--no-sandbox"
          output-path: a11y-results
          # Server options (served by the action)
          server-root: dist
          server-port: 8080

      - name: Upload Pa11y report
        uses: actions/upload-artifact@v4
        with:
          name: a11y-report-${{ github.run_number }}
          path: a11y-results
          retention-days: 30

  # ---------------------- Back‑end -----------------------------------
  backend:
    name: Back‑end (lint + test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.11 with pip‑cache
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: Server/requirements.txt

      - name: Install deps (+ dev tools)
        working-directory: Server
        run: |
          pip install -r requirements.txt
          pip install black flake8 isort pytest pytest-cov

      - name: Lint – Flake8
        working-directory: Server
        run: flake8 . --max-line-length 88 --extend-ignore E203,W503

      - name: Lint – isort
        working-directory: Server
        run: isort --check-only --diff .

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ github.run_number }}
          path: Server/coverage.xml
          retention-days: 14

  # ---------------------- Packaging ----------------------------------
  package:
    name: Build release artifacts
    needs: [frontend, backend]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Assemble packages
        env:
          VERSION: ${{ github.run_number }}
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
        run: |
          set -eu
          mkdir -p packages deploy
          # Frontend ZIP
          (cd artifacts/frontend-dist-* && zip -qr ../../packages/frontend-$VERSION-$BRANCH.zip .)
          # Backend source TAR.GZ (clean)
          (cd Server && tar --exclude='__pycache__' --exclude='*.pyc' -czf ../packages/backend-$VERSION-$BRANCH.tar.gz .)
          # Combined package
          mkdir deploy/frontend deploy/backend
          cp -r artifacts/frontend-dist-*/. deploy/frontend/
          cp -r Server/. deploy/backend/
          tar -czf packages/full-$VERSION-$BRANCH.tar.gz -C deploy .
          sha256sum packages/* > packages/checksums.txt

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: release-packages-${{ github.run_number }}
          path: packages/
          retention-days: 60

  # ---------------------- CodeQL (security) --------------------------
  codeql:
    name: CodeQL analysis
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    permissions:
      security-events: write # allow SARIF upload
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: TypeScript, python
      - uses: github/codeql-action/analyze@v3
