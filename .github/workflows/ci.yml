# .github/workflows/ci.yml – full pipeline
# -------------------------------------------------
# * Frontend build, tests, accessibility audit (Pa11y)
# * Backend lint & smoke build
# * Artifacts & packaging
# * Deployment‑ready checks
# -------------------------------------------------

name: CI Pipeline

on:
  push:
    branches: [main, develop, youness-tmp]
  pull_request:
    branches: [main, develop]

# Cancel older runs on same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------------------------------------
  # 1. Quick repo structure listing (helps onboarding)
  # -------------------------------------------------
  debug-structure:
    name: Debug project structure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show repo tree
        run: |
          echo "=== root ==="; ls -la
          echo "=== package.json ==="; find . -name package.json
          echo "=== requirements.txt ==="; find . -name requirements.txt
          echo "=== first 3 levels ==="; find . -maxdepth 3 -type d | sort

  # -------------------------------------------------
  # 2. Frontend – install, lint, test, build
  # -------------------------------------------------
  frontend:
    name: Frontend build & tests
    runs-on: ubuntu-latest
    needs: debug-structure
    defaults:
      run:
        working-directory: Client
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js & cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: Client/package-lock.json

      - name: Install deps
        run: npm ci

      - name: TypeScript check
        run: npx tsc --noEmit --skipLibCheck

      - name: ESLint
        run: npm run lint

      - name: Unit tests (Vitest)
        run: npm test -- --run --coverage

      - name: Build (Vite)
        run: npx vite build --mode production

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: Client/dist/
          retention-days: 14

  # -------------------------------------------------
  # 3. Accessibility – Pa11y CLI against built SPA
  # -------------------------------------------------
  accessibility:
    name: Pa11y WCAG audit
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download built SPA
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: dist

      - name: Setup Node.js for Pa11y
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Global install Pa11y & helpers
        run: npm install -g pa11y@7.0.0 serve@14.2.3 wait-on@7.2.0

      - name: Serve & audit
        run: |
          nohup serve -s dist -l 8080 --no-request-logging &
          SERVER_PID=$!
          npx wait-on http://localhost:8080 --timeout 30000
          mkdir -p a11y-results
          pa11y http://localhost:8080 \
            --standard WCAG2AA \
            --timeout 30000 \
            --wait 2000 \
            --reporter html > a11y-results/report.html
          kill $SERVER_PID

      - name: Upload Pa11y report
        uses: actions/upload-artifact@v4
        with:
          name: a11y-report-${{ github.run_number }}
          path: a11y-results/
          retention-days: 30

  # -------------------------------------------------
  # 4. Backend – lint & basic import checks
  # -------------------------------------------------
  backend-build:
    name: Backend lint & build
    runs-on: ubuntu-latest
    needs: debug-structure
    defaults:
      run:
        working-directory: Server
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & cache
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: Server/requirements.txt

      - name: Install deps & linters
        run: |
          pip install -r requirements.txt
          pip install black flake8 isort

      - name: Code format (Black)
        run: black --check .

      - name: Style (Flake8)
        run: flake8 . --max-line-length=88 --extend-ignore=E203,W503

      - name: isort check
        run: isort --check-only --diff .

      - name: FastAPI import smoke test
        run: |
          python - << 'PY'
          import importlib, sys; ok=False
          for mod in ("main", "app.main"):
              try:
                  importlib.import_module(mod)
                  print(f"✅ Imported {mod}")
                  ok=True
              except Exception as exc:
                  print(f"⚠️  Cannot import {mod}: {exc}")
          sys.exit(0 if ok else 1)
          PY

  # -------------------------------------------------
  # 5. Packaging artifacts when on dev/main
  # -------------------------------------------------
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    needs: [frontend, backend-build, accessibility]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend dist
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: artifacts/frontend

      - name: Tar frontend
        run: |
          mkdir -p packages
          tar -czf packages/frontend-${{ github.sha }}.tar.gz -C artifacts/frontend .

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-packages-${{ github.run_number }}
          path: packages/
          retention-days: 60

  # -------------------------------------------------
  # 6. Final gate on main branch
  # -------------------------------------------------
  deploy-check:
    name: Deployment gate
    needs: [frontend, backend-build, accessibility, create-deployment-artifacts]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: All green
        run: echo "🚀 CI passed – ready to deploy!"
