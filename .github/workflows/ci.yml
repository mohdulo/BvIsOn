name: CI

# Cancel older runs on the same branch/PR when a new commit arrives
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, develop, youness-tmp]
  pull_request:
    branches: [main, develop]

jobs:
  # ---------------------- Frontâ€‘end ----------------------------------
  frontend:
    name: Frontâ€‘end (lintÂ +Â testÂ +Â build)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # donâ€™t abort all jobs on first failure
      matrix:
        node: [18, 20, 22] # add or drop versions freely
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node }} with cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          node-version-file: Client/package.json
          cache-dependency-path: Client/package-lock.json

      - name: Install deps
        working-directory: Client
        run: npm ci --prefer-offline --no-audit

      - name: Typeâ€‘check (TS)
        working-directory: Client
        run: npx tsc --noEmit --skipLibCheck

      - name: UnitÂ tests (Jest)
        working-directory: Client
        run: npm test -- --run --coverage

      - name: Build (Vite)
        working-directory: Client
        run: npm run build

      - name: Upload built SPA
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist-${{ matrix.node }}-${{ github.run_number }}
          path: Client/dist
          retention-days: 14
          if-no-files-found: error

      # Append coverage to the global JobÂ Summary
      - name: Frontâ€‘end coverage summary
        if: always()
        run: |
          COV=$(jq '.total.lines.pct' Client/coverage/coverage-summary.json)
          echo "### Frontâ€‘end coverage (Node ${{ matrix.node }}): ${COV}%" >> $GITHUB_STEP_SUMMARY

  # ---------------------- Accessibility ------------------------------
  accessibility:
    name: Pa11y WCAG audit
    needs: frontend # waits for all Node versions to finish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Grab *one* of the frontend artifacts (built with NodeÂ 20)
      - name: Download built SPA
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist-20-${{ github.run_number }}
          path: dist

      # Install Node and Pa11yâ€‘CI
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Pa11yâ€‘CI globally
        run: npm install -g pa11y@7.0.0 serve@14.2.3 wait-on@7.2.0

      # Serve the static files âžœ run Pa11y
      - name: Serve & audit with Pa11y
        run: |
          nohup serve -s dist -l 8080 --no-request-logging >server.log 2>&1 &
          SERVER_PID=$!
          npx wait-on http://localhost:8080 --timeout 30000
          pa11y http://localhost:8080 \
            --standard WCAG2AA \
            --timeout 30000 \
            --wait 2000 \
            --threshold 0 \
            --reporter html > a11y-results/report.html
          kill $SERVER_PID

      - name: Upload Pa11y report
        uses: actions/upload-artifact@v4
        with:
          name: a11y-report-${{ github.run_number }}
          path: a11y-results
          retention-days: 30

      - name: Accessibility summary
        if: always()
        run: echo "âœ… Pa11y audit complete â€“ see artifact for full report" >> $GITHUB_STEP_SUMMARY

  # ---------------------- Backâ€‘end -----------------------------------
  backend:
    name: Backâ€‘end (lintÂ +Â test)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }} with pip cache
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: Server/requirements.txt

      - name: Extra pip cache (wheel downloads)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('Server/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps + dev tools
        working-directory: Server
        run: |
          pip install -r requirements.txt
          pip install black flake8 isort pytest pytest-cov pytest-xdist

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-py${{ matrix.python }}-${{ github.run_number }}
          path: Server/coverage.xml
          retention-days: 14

      - name: Backâ€‘end coverage summary
        if: always()
        run: |
          RATE=$(python - <<'PY'
          import xml.etree.ElementTree as ET, sys
          root = ET.parse('Server/coverage.xml').getroot()
          rate = float(root.attrib.get('line-rate', 0)) * 100
          print(f"{rate:.2f}")PY)
          echo "### Backâ€‘end coverage (Python ${{ matrix.python }}): ${RATE}%" >> $GITHUB_STEP_SUMMARY

  # ---------------------- Packaging ----------------------------------
  package:
    name: Build releaseÂ artifacts
    needs: [frontend, backend]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Assemble packages
        env:
          VERSION: ${{ github.run_number }}
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
        run: |
          set -eu
          mkdir -p packages deploy
          # Frontâ€‘end ZIP (use NodeÂ 20 build)
          (cd artifacts/frontend-dist-20-* && zip -qr ../../packages/frontend-$VERSION-$BRANCH.zip .)
          # Backâ€‘end source TAR.GZ (clean)
          (cd Server && tar --exclude='__pycache__' --exclude='*.pyc' -czf ../packages/backend-$VERSION-$BRANCH.tar.gz .)
          # Combined package
          mkdir -p deploy/frontend deploy/backend
          cp -r artifacts/frontend-dist-20-*/. deploy/frontend/
          cp -r Server/. deploy/backend/
          tar -czf packages/full-$VERSION-$BRANCH.tar.gz -C deploy .
          sha256sum packages/* > packages/checksums.txt

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: release-packages-${{ github.run_number }}
          path: packages/
          retention-days: 60

  # ---------------------- CodeQL (security) --------------------------
  codeql:
    name: CodeQL analysis
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript,python
      - uses: github/codeql-action/analyze@v3

  # ---------------------- Secrets & OSSAR scans ----------------------
  security-scan:
    name: Secrets & OSSAR scan
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - uses: actions/checkout@v4

      - name: TruffleHog secrets scan
        uses: trufflesecurity/trufflehog@v3
        with:
          path: .
          base: ${{ github.event.before }}

      - name: OSSAR (npm dependencies)
        uses: github/ossar-action@v2

      - name: Security scan summary
        if: always()
        run: echo "ðŸ”’ Security scans finished â€“ see annotations for any findings" >> $GITHUB_STEP_SUMMARY"
